name: SharePoint File Trigger
on:
  repository_dispatch:
    types: [sharepoint_file_added]
  workflow_dispatch:

jobs:
  process-file:
    runs-on: self-hosted  # Runner auto-hospedado en Windows
    env:
      ACTIONS_STEP_DEBUG: true  # Habilita logs detallados para depuración
    steps:
      - name: Clean workspace
        run: |
          if (Test-Path whisper-transcript) {
            Remove-Item -Recurse -Force whisper-transcript
          }
        shell: powershell

      - name: Checkout code
        uses: actions/checkout@v4  # Actualizado a v4

      - name: Test Python
        run: |
          python --version
          pip list
        shell: powershell

      - name: Test System Info
        run: |
          systeminfo
          if (Get-Command nvidia-smi -ErrorAction SilentlyContinue) {
            nvidia-smi
          } else {
            Write-Output "nvidia-smi no está disponible. Verifica que CUDA esté instalado."
          }
        shell: powershell

      - name: Install FFmpeg
        run: |
          if (-not (Get-Command ffmpeg -ErrorAction SilentlyContinue)) {
            Write-Output "Comprobando FFmpeg..."

            # Verificar si el directorio ya contiene archivos válidos
            if (Test-Path "C:\ffmpeg\ffmpeg-master-latest-win64-gpl\bin\ffmpeg.exe") {
              Write-Output "FFmpeg ya instalado, omitiendo descarga."
            } else {
              Write-Output "Descargando e instalando FFmpeg..."
              Invoke-WebRequest -Uri "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip" -OutFile "ffmpeg.zip"

              # Usar Force solo en la extracción, no eliminar todo
              Expand-Archive -Path "ffmpeg.zip" -DestinationPath "C:\ffmpeg" -Force
            }

            # Asegurar que está en el PATH
            if ($env:Path -notlike "*C:\ffmpeg\ffmpeg-master-latest-win64-gpl\bin*") {
              $env:Path += ";C:\ffmpeg\ffmpeg-master-latest-win64-gpl\bin"
              [System.Environment]::SetEnvironmentVariable("Path", $env:Path, [System.EnvironmentVariableTarget]::Machine)
            }
          }

          # Comprobar que funciona
          ffmpeg -version
        shell: powershell

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        shell: powershell

      - name: Clean downloads directory
        run: |
          Remove-Item -Recurse -Force downloads -ErrorAction SilentlyContinue
          New-Item -ItemType Directory -Path downloads
        shell: powershell

      - name: Process SharePoint file
        env:
          SHAREPOINT_CLIENT_ID: ${{ secrets.SHAREPOINT_CLIENT_ID }}
          SHAREPOINT_CLIENT_SECRET: ${{ secrets.SHAREPOINT_CLIENT_SECRET }}
          SHAREPOINT_TENANT_ID: ${{ secrets.SHAREPOINT_TENANT_ID }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          SHAREPOINT_NAME_FILE: ${{ github.event.client_payload.NameFile }}
          SHAREPOINT_NAME_FILE_EXTENSION: ${{ github.event.client_payload.NameFileExtension }}
          SHAREPOINT_LINK: ${{ github.event.client_payload.Link }}
        run: |
          Write-Output "Nuevo archivo detectado:"
          Write-Output "Link: $env:SHAREPOINT_LINK"
          Write-Output "NameFileExtension: $env:SHAREPOINT_NAME_FILE_EXTENSION"
          python main.py "$env:SHAREPOINT_NAME_FILE" "$env:SHAREPOINT_LINK"
        shell: powershell